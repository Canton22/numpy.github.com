<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NumPy</title><link>https://numpy.org/ja/</link><description>Recent content on NumPy</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sat, 16 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://numpy.org/ja/index.xml" rel="self" type="application/rss+xml"/><item><title>ニュース</title><link>https://numpy.org/ja/news/</link><pubDate>Sat, 16 Sep 2023 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/news/</guid><description>NumPy 1.26.0 がリリースされました。# 2023年9月16日 &amp;ndash; NumPy 1.26.0がリリースされました。 今回のリリースの目玉機能は次のとおりです。
Python 3.12.0 のサポート Cython 3.0.0 との互換性 Mesonビルドシステムの利用 SIMD サポートの改善 f2py のバグ修正, meson と bind(x) のサポート 更新された BLAS/LAPACK の高速化ライブラリのサポート Numpy 1.26.0 は 1.25 からの互換性を保持しています。Mesonビルドシステムへの移行とCython 3.0.0のサポートが目的のリリースです。 合計20人がこのリリースに貢献し、59個のプルリクエストがマージされました。
このリリースでサポートされている Python のバージョンは3.9から 3.12 です。
numpy.orgが日本語とポルトガル語で利用可能になりました# 2023年4月2日 &amp;ndash; numpy.orgが2つの言語で利用可能になりました： 日本語とポルトガル語。 熱心なボランティアがいなければ、このプロジェクトは不可能でした：
ポルトガル語
Melissa Weber Mendonça (melissawm) Ricardo Prins (ricardoprins) Getúlio Silva (getuliosilva) Julio Batista Silva (jbsilva) Alexandre de Siqueira (alexdesiqueira) Alexandre B A Villares (villares) Vini Salazar (vinisalazar) 日本語：</description></item><item><title>2020年 NumPyコミュニティ調査</title><link>https://numpy.org/ja/user-survey-2020/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/user-survey-2020/</guid><description>2020年に、NumPyの調査チームは、ミシガン大学とメリーランド大学が共同で開催した、調査方法学の修士コースの学生と教員と共同で、初めて公式のNumPyコミュニティ調査を実施しました。 75カ国から1,200人以上のNumPyユーザーが参加してくれました。NumPyコミュニティの全体像を描き、プロジェクトの未来像についての意見を述べてもらいました。
調査結果を詳細を知りたい場合は、こちらのレポート をダウンロードしてください。
結果の概要については、 こちらの図 をチェックしてください。
より詳細が知りたくなりましたか？ https://numpy.org/user-survey-2020-details/ をご覧ください。</description></item><item><title>404</title><link>https://numpy.org/ja/404/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/404/</guid><description>おっとっと！ 間違った所にアクセスしているようです。
何かがここにページがあるべきだと思ったら、GitHub で issue を作成してください。</description></item><item><title>NumPy に貢献する</title><link>https://numpy.org/ja/contribute/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/contribute/</guid><description>NumPyプロジェクトを成功させるには、あなたの専門知識とプロジェクトに関する熱意が必要です。 貢献方法はプログラミングに限定されません。 このページにはあなたができる 様々な種類の貢献方法が示されています。
もしどこから始めればいいか、あなたのスキルをどう生かせばいいかがわからない場合は、 _是非ご連絡下さい。 _ 連絡の方法としては、 メーリングリスト 、 GitHub、 イシューの作成 、関連するイシューへのコメントがあります。
連絡先としては、 numpy-team@googlegroups.com または、Slack (グループに招待するためにこちらに連絡お願いします: numpy-team@googlegroups.com)があります。
また、隔週の _コミュニティミーティング_もあり、詳細は メーリングリスト で発表されています。 あなたの参加を大いに歓迎します。 オープンソースプロジェクトに貢献するのが初めての方は、是非、 このガイド を読んでみて下さい。
私たちのコミュニティは、誰もが平等に扱われ、すべての貢献を平等に評価することを目指しています。 私たちはオープンで居心地の良いコミュニティを作るために 行動基準 を制定しています。
コードを書く# プログラマーの方には、こちらの ガイドでNumPyのコードに貢献する方法を説明しています。 追加情報に関しては、 こちらのYouTube チャンネル もご覧ください。
プルリクエストのレビュー# NumPyプロジェクトには現時点で250以上のオープンなプルリクエストがあり、多くの 改善要求と多くのレビュワーからのフィードバックを待っています。 もしあなたがNumPy を使ったことがある場合、 たとえNumPyコードベースに慣れていない場合でも貢献する方法はあります。 例えば、
長期にわたる議論をまとめる ドキュメントのPRをトリアージする 提案された変更をテストする 教育用の資料を作成する# NumPy の ユーザガイド は現在、大規模な再設計中です。 新しいNumPyのWebページは、新しいチュートリアルや、NumPyの使い方、NumPy内部の深い説明など必要としており、サイト全体にも再設計と再構築が必要です。 このウェブサイトの再構築の作業は、ドキュメントを書くだけではありません。 コード例や、ノートブック、ビデオなどの作成も歓迎しています。 NEP 44 — Restructuring the NumPyDocumentationに、ウェブサイトの再構築についての詳細が説明されています。
イシューのトリアージ# NumPyのイシュートラッカー には、 _沢山の_Open状態のイシューがあります。 すでに解決されたもの、優先順位付けされるべきもの、 初心者が取り組むのに適したものがあります。 あなたができることは、いくつもあります:
古いバグがまだ残っているか確認する 重複したイシューを見つけ、お互いに関連づける 問題を再現するコードを作成する イシューに正しいラベル付けをする (トリアージ権が必要なので、連絡下さい) ぜひ、やってみて下さい。</description></item><item><title>NumPyユーザアンケート</title><link>https://numpy.org/ja/user-surveys/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/user-surveys/</guid><description>2020 NumPY調査チームは、ミシガン大学とメリーランド大学の学生や教員と協力して、最初の公式NumPyコミュニティ調査を実施しました。 アンケートの結果はこちらをご覧ください。
2021 収集された調査データは現在解析中です。
過去または今後のNumPyユーザ調査に関する質問や提案がある場合は、こちらにイシューを作成してください。</description></item><item><title>NumPyのインストール</title><link>https://numpy.org/ja/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/install/</guid><description>NumPyをインストールするための唯一必要なものは、Pythonそのものだけです。 もしまだPythonをイントールしておらず、最もシンプルなインストール方法をお探しなら、Anaconda Distributionの使用をおすすめします。これにはPython、NumPy、および科学計算やデータサイエンスでよく使われる様々な多くのパッケージが含まれています。
NumPyはconda、pip 、macOSやLinuxのパッケージマネージャー、または ソースコードからインストールすることが出来ます。 詳細な手順については、以下の Python と Numpyの インストールガイド を参照してください。
CONDA
condaを使用する場合、 defaults または conda-forge のチャンネルから NumPy をインストールできます。
# base envにインストールするのでなく、environmentを作成するのがベストプラクティスです conda create -n my-env conda activate my-env # conda-forgeからインストールする場合 conda config --env --add channels conda-forge # インストールコマンド conda install numpy PIP
pipを使用する場合、以下のようにNumPyをインストールできます:
pip install numpy またpipを使う場合、仮想環境を使うことをおすすめします。 再現可能なインストールを参照ください。 こちらの記事では仮想環境を使う詳細について説明されています。
PythonとNumPyの インストールガイド# Pythonパッケージのインストールと管理は複雑なので、ほとんどのタスクには数多くの代替ツールがあります。 このガイドでは、読者に最適な(または最も人気のある) 方法と明確な指針を提供したいと思います。 このガイドでは、一般的なオペレーティングシステムとハードウェア上での、 Python、NumPy、PyData (または数値計算) スタックのユーザに焦点を当てています。
推奨方法# まずはユーザの経験レベルと、関心のあるOSに基づいた推奨方法から説明していきたいと思います。 PythonやNumPyの経験が「初級」と「上級」の間の方は、シンプルにインストールしたい場合は「初級」を、より長い視点にたったベストプラクティスに沿ってインストールしたい方は「上級」を参照ください。
初級ユーザ# Windows、macOS、Linuxのすべてのユーザー向けには:
Anaconda をインストールします（必要な パッケージと以下に挙げるすべてのツールがインストールされます）。 コードを書いたり、実行してみましょう。 探索的・対話的コンピューティングにはJupyterLabのノートブックが便利です。 スクリプトやパッケージの作成にはSpyderやVisual Studio Codeを利用できます。 Anaconda Navigator を使ってパッケージを管理し、JupyterLab、Spyder、Visual Studio Codeを使い始められます。 上級ユーザー# Conda# Miniforge をインストールします。 base のconda環境を出来るだけ小さく保って下さい。 そして、一つか二つ個別のconda environmentを使って、作業中のタスクやプロジェクトに必要なパッケージをインストールしましょう。 pip/PyPI を利用したい場合# 個人的な好みや、下記のcondaとpipの違いを理解した上で、pip/PyPIベースの方法を使いたいユーザーには、下記をお勧めします:</description></item><item><title>NumPyの学び方</title><link>https://numpy.org/ja/learn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/learn/</guid><description>公式の NumPy ドキュメント については numpy.org/doc/stableを参照してください。
以下は、Numpyへの貢献者とコミュニティによって開発された、NumPyの自己学習と他人への教育のための資料です。
初心者向け# NumPyについての資料は多数存在しています。 初心者の方にはこちらの資料を強くお勧めします：
動画
NumPy Quickstart チュートリアル NumPyチュートリアルで、いくつかのチュートリアルと教育的資料を見ることができます。 このページのゴールは、NumPyプロジェクトによる質のいい資料を提供することです。 自習と講義形式の両方を想定しており、Jupyterノートブック形式で提供されます。 もしあなた自身の資料を追加することに興味がある場合、Github上のnumpy-tutorialsリポジトリをチェックしてみて下さい。 イラストで学ぶNumPy by Lev Maximov Scientific Pythonレクチャー NumPyだけでなく、科学的なPythonソフトウェアエコシステムを広く紹介しています。 NumPy: 初心者のための基本 NumPy チュートリアル by Nicolas Rougier スタンフォード大学 CS231 by Justin Johnson NumPyユーザーガイド チュートリアル
NumPガイド Travelis E. Oliphant著 これは2006年の無料版の初版です 最新版(2015年)については、こちら を参照ください. PythonにおけるNumPy (発展編) エレガントなSciPy Juan Nunez-Iglesias・Stefan van der Walt・Harriet Dashnow 著 また、「Python+SciPy」を題材にした推薦本リスト もチェックしてみてください。 ほとんどの本にはNumPyを核とした「SciPyエコシステム」が説明されています。
動画
NumPy を使った数値計算入門 by Alex Chabot-Leclerc 上級者向け# 高度なインデックス指定、分割、スタッキング、線形代数など、NumPyの概念をより深く理解するためには、これらの上級者向け資料を試してみてください。
書籍
https://www.tutorialspoint.com/numpy/numpy_advanced_indexing.htm NumPyとSciPyへのイントロダクション M. Scott Shell著 NumPy救急キット Stéfan van der Walt著 NumPyチュートリアルで、いくつかのチュートリアルと教育的資料を見ることができます。 このページのゴールは、NumPyプロジェクトによる質のいい資料を提供することです。 自習と講義形式の両方を想定しており、Jupyterノートブック形式で提供されます。 もしあなた自身の資料を追加することに興味がある場合、Github上のnumpy-tutorialsリポジトリをチェックしてみて下さい。 チュートリアル</description></item><item><title>NumPyの歴史</title><link>https://numpy.org/ja/history/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/history/</guid><description>NumPy は配列データ構造と配列に関連する高速な数値ルーチンを提供する Python 基礎的なライブラリです。 開始当初は資金も少なく、主に大学院生により開発されていました。その多くはコンピュータサイエンスの教育を受けておらず、指導教官のサポートも受けていませんでした。少数の &amp;ldquo;野良&amp;quot;学生プログラマーのグループが、すでに確立されていた商用研究ソフトウェアのエコシステムをひっくり返すなんて、想像することすら馬鹿げていました。 商用ソフトは、何百万もの資金と何百人もの優秀なエンジニアに支えられていましたから。それでも、独特の視点を持つ熱狂的でフレンドリーなコミュニティに助けられ、完全にオープンなツールスタックの背後にある哲学的な動機は、長い目では日の目を見てきました。現在では、NumPyは科学者、技術者、および世界中の多くの専門家によって信頼され、使われています。 例えば、重力波の解析に用いられた公開スクリプトはNumPyを利用していますし、「M87ブラックホール画像化プロジェクト」では、直接NumPyを引用しています。 このライブラリの開発開始当初は資金も少なく、主に大学院生が開発していましたが、その多くはコンピュータサイエンスの教育を受けておらず、指導教官のサポートも受けていませんでした。 何百万もの資金調達と何百人もの優秀なエンジニアに支えられている当時の商用研究ソフトウェアのエコシステムを、少数の &amp;ldquo;野良&amp;quot;学生プログラマーのグループがひっくり返すことができると想像することさえ、当時は馬鹿げていると考えられていました。 それでも、独特の視点を持つ熱狂的でフレンドリーなコミュニティに助けられ、完全にオープンなツールスタックの背後にある哲学的な動機は、長い目では日の目を見てきました。 現在では、Numpy は科学者、技術者、および世界中の多くの専門家によって信頼され、使われています。 例えば、重力波の解析に用いられた公開スクリプトはNumPyを利用していますし、「M87ブラックホール画像化プロジェクト」では、直接NumPyを引用しています。
NumPy および関連ライブラリの開発におけるマイルストーンの詳細については、 arxiv.org を参照してください。
NumPyのベースとなったNumericとNumarrayライブラリのコピーを入手したい場合は、以下のリンクを参照してください。
Numeric のダウンロード**
*Numarray * のダウンロード**
*これらの古いパッケージはもはや保守されていないことに注意してください。 配列関連の処理をしたい場合は、NumPyを使用するか、NumPyライブラリを利用するために既存のコードをリファクタリングすることを強くお勧めします。
過去の資料 Numericマニュアルのダウンロード</description></item><item><title>NumPyを引用する</title><link>https://numpy.org/ja/citing-numpy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/citing-numpy/</guid><description>もしあなたの研究においてNumPyが重要な役割を果たし、論文でこのプロジェクトについて言及したい場合は、こちらの論文を引用して下さい。
Harris, C.R., Millman, K.J., van der Walt, S.J. et al. Array programming with NumPy. Nature 585, 357–362 (2020). DOI: 10.1038/s41586-020-2649-2. (リンク). BibTeX形式:
@Article{ harris2020array, title = {Array programming with {NumPy}}, author = {Charles R. Harris and K. Jarrod Millman and St{&amp;#39;{e}}fan J. van der Walt and Ralf Gommers and Pauli Virtanen and David Cournapeau and Eric Wieser and Julian Taylor and Sebastian Berg and Nathaniel J. Smith and Robert Kern and Matti Picus and Stephan Hoyer and Marten H.</description></item><item><title>NumPy開発チーム</title><link>https://numpy.org/ja/teams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/teams/</guid><description>私たちは、高品質のオープンソースソフトウェアを構築することで、世界中の科学・研究コミュニティをサポートすることを使命とする国際的なチームです。 是非参加してください!
Maintainers# Andrew Nelson Bas van Beek Charles Harris Eric Wieser Ganesh Kathiresan Rohit Goswami Matthew Brett Matti Picus Matt Haberland Melissa Weber Mendonça Marten van Kerkwijk Christopher Sidebottom Mateusz Sokół Mukulika Nathan Goldbaum Pearu Peterson Josh Wilson Pauli Virtanen Chunlin Raghuveer Devulapalli Ralf Gommers Robert Kern Ross Barnowski Sebastian Berg Sayed Adel Stephan Hoyer Stefan van der Walt Tyler Reddy Warren Weckesser Docs team# Rohit Goswami Inessa Pawson Mars Lee Matti Picus Melissa Weber Mendonça Mukulika Ross Barnowski Web team# Inessa Pawson Jarrod Millman Joe LaChance Mars Lee Ralf Gommers shalz Shekhar Prasad Rajak Stefan van der Walt Albert Steppi Triage team# Andrew Nelson Anirudh Subramanian Aaron Meurer Atsushi Sakai Ben Nathanson Anne Bonner Brigitta Sipőcz carlkl Ryan C Cooper ਗਗਨਦੀਪ ਸਿੰਘ (Gagandeep Singh) Hameer Abbasi Inessa Pawson jbrockmendel Kai Yuji Kanagawa Kriti Singh Christopher Albert Lysandros Nikolaou Meekail Zain Christopher Sidebottom Mateusz Sokół Mukulika Noa Tamir Raghuveer Devulapalli shalz Tina Oberoi Rakesh Vasudevan Zijie (ZJ) Poh Survey team# Inessa Pawson Ralf Gommers Ross Barnowski Emeritus maintainers# Allan Haldane Ondřej Čertík David Cournapeau Jaime Jarrod Millman Julian Taylor Mark Wiebe Nathaniel J.</description></item><item><title>NumPy行動規範</title><link>https://numpy.org/ja/code-of-conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/code-of-conduct/</guid><description>はじめに# この行動規範は、NumPy プロジェクトによって管理されるすべての場所で適用されます。 この場所とは、すべてのパブリックおよびプライベートのメーリングリスト、イシュートラッカー、Wiki、ブログ、Twitter、コミュニティで使用されているその他の通信チャンネルなどを含みます。 NumPy プロジェクトでは対面でのイベントは開催していません。 しかし、我々のコミュニティに関連するものであれば、対面のイベントでも同様の行動規範を持つ必要があります。
この行動規範は、NumPy コミュニティに正式または非公式に参加するすべての人が順守する必要があります。 その他にも、NumPyとの提携・関連するプロジェクト活動においては、特にそれらのプロジェクトを代表する場合、同様の行動規範に従う必要があります。
この行動規範は完全ではありません。 しかし、行動規範は我々が理解すべき、互いの協力の仕方や、共通の場所のあるべき姿、我々のゴールなどをまとめるのに重要な役目を果たします。 フレンドリーで生産的な環境を生み出し、周囲のコミュニティにより良い影響を与えるため、ぜひこの行動規範に従ってください。
ガイドラインの概要# 私たちは下記の内容に真摯に取り組みます。
開けたコミュニティにしましょう。 私たちは、誰でもコミュニティに参加できるようにします。 私たちは、公にすべきではない内容を議論する場合以外、プロジェクトに関連するメッセージを公の場で告知することを選びます。 これは、NumPyに関するヘルプやプロジェクトサポートにも適用されます。公式なサポートだけでなく、NumPyに関する質問に答える場合もです。 これにより、質問に答えた際の意図しない間違いを、より簡単に検出し、訂正できるようになります。 共感し、歓迎し、友好的で、そして我慢強くありましょう。 私たちは互いに争いを解決し合い、互いの善意を信じ合います。 私たちは時折り不満を感じるかもしれません。 しかしそのような場合も、不満を個人的な攻撃に変えることは許容されません。 人々が不快や脅威を感じるコミュニティは、生産的ではないからです。 互いに協力し合おう。 私たちの開発成果は他の人々によって利用され、一方で、たちは他の人々の開発成果に依存しているのです。 私たちがプロジェクトために何かを作るとき、私たちはそれがどのように動作するかを他の人に説明する必要があります。 しかし、この作業により、より良いものを作り上げることができるのです。 私たちが下す全ての決断は、ユーザと開発コミュニティに影響を与えうるし、その決断がもたらす結果を私たちは真摯に受け止めます。 好奇心を大事にしよう。 全てを知っている人はいないのです！ 早め早めに質問をすることで、後に生じうる多くの問題を回避できます。 そのため私たちは質問を奨励しています。 私たちは、出来るだけ質問に良く対応し、手助けできるよう努力します。 使う言葉に注意しましょう。 私たちは、コミュニティにおけるコミュニケーションに注意と敬意を払います。 そして、私たちは自分の言葉に責任を持ちます。 他人に優しくしましょう。 他のコミュニティの参加者を侮辱しないでください。 私たちは、以下のようなハラスメントやその他の排斥行為を許しません。 : 他の人に向けられた暴力的な行為や言葉。 性差別や人種差別、その他の差別的なジョークや言動。 性的または暴力的な内容の投稿。 他のユーザーの個人情報を投稿すること。 (または投稿すると脅すこと)。 公開目的のない電子メールや、ICRチャットのようなログの残らないフォーラムの履歴など、プライベートなコンテンツを送信者の同意なしに共有すること。 個人的な侮辱, 特に人種差別や性差別的な用語を使用して侮辱すること。 不快な思いをさせる性的な言動。 過度に粗暴に振る舞うこと。 ひどいな言葉を使うのを避けてください。 人々は怒りを覚える感度が、それぞれ大きく異なります。 他人に対するハラスメントの繰り返し。 一般的に、誰かがあなたにある言動を止めるように要求した場合、その言動をやめて下さい。 上記のいずれかの行動を擁護すること、または奨励すること。 多様性に関する声明# NumPyプロジェクトは、全ての人々の参加を歓迎しています。 私たちは、誰もがコミュニティの一員であることを楽しめるように尽力します。 全ての人の好みを満足はさせられないかもしれませんが、全員に対し出来るだけ親切な対応ができるよう最善を尽くします。
あなたの自己認識や、他者のあなたへの認識は関係ありません。 私たちはあなたを歓迎します。 民族、遺伝、性同一性あるいは関連する表現、言語、国籍、神経学的な差異、生物学的な差異、 政治的信条、職業、人種、宗教、性的指向、社会経済的地位、文化的な差異、技術的な能力。
私たちはすべての種類の言語言語話者の参加を歓迎しますが、NumPy 開発は英語で行われます。
NumPy コミュニティの標準的なルールは、上記の行動規範で説明されています。 NumPyコミュニティの参加者は、これらの行動基準をすべてのコミュニケーションにおいて順守し、他の人々にも同様な行動をすることを推奨すべきです (次のセクションを参照)。</description></item><item><title>NumPy行動規範 - 報告書のフォローアップ方法</title><link>https://numpy.org/ja/report-handling-manual/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/report-handling-manual/</guid><description>NumPyの行動規範委員会はこのマニュアルに従います。 このマニュアルは様々な問題に対応する際に使用され、一貫性と公平性を確保します。
行動規範 を施行することは、私たちのコミュニティの現在のため、未来のために重要です。 この施行は、軽いものではありません。 施行の基準を見直す際、行動規範委員会は以下の考え方とガイドラインに留意するようにします。
機械的ではなく、人間的に行動します。 委員会は、当事者のプライバシーと報告者の必要なだけの機密性を尊重しながら、状況を理解するように働きかけることができます. ただし、1人以上の個人と直接連絡を取る必要がある場合もあります。 委員会の目標は正しい決定を下すのではなく、コミュニティの健康を改善することなのです。 行動を判断するのではなく、個人への共感を強調し、「良い」と「悪い」の二値評価を避けます。 明確な攻撃性とハラスメントが存在した場合、私たちはそれらに対処します。 しかし、解決が困難なシナリオの多くは、通常の意見の相違が、複数の当事者による無益または有害な行動に発展した場合です。 完全に文脈を理解し、すべてを再び元に戻す道を見つけることは困難ですが、コミュニティにとって最終的に最も有益な方法です。 私たちは、電子メールが判断に困難な媒体であり、独立して利用できることを理解しています。 個人の情報なしに電子メール上で批判を受けることは、特に苦痛である場合もあります。 そこで、他者の見解に対して、開放的で、敬意を持った雰囲気を保つことが重要になります。 それはまた、私たちの行動が透明でなければならないことを意味します。 全てのメンバーが公平かつ同情をもって扱われるようにするため、私たちは全力を尽くします。 差別の境界は時に曖昧で、また無意識に行われている場合もあります。 これにより、普通の人との関わりの中で、不公平感や敵意として現れてくるのです。 私達は、このようなことが起こることはわかっているので、気をつけて見ていきたいと思います。 不当な扱いを受けたと思われる方は、ぜひご連絡ください。 良い議論を実践することで、エンゲージメントの向上に取り組みます。例えば議論がどこで止まっているのかを特定したり、 実践的な情報、指針、資源を提供することで、これらの問題を前向きな方向に変えていきます。 新しいメンバーが何を必要としているかに留意します。 特に社会的地位の低いグループからの参加を増やすことを目的に、明確なサポートと配慮を提供していきます。 一人一人の文化的背景や母国語は異なります。 ネイティブでない人が起こした悪気のない誤解を確認し、問題を理解してもらい、不快感を与えないために何を変えればよいかを教えてあげてください。 外国語での複雑な議論はとても難しいものであり、国籍や文化を超えて多様性を育てていきたいと考えています。 仲介# 自主的な非公式の調停は、私たちの重要な役割です。 2つのグループ以上の当事者が不適切な行動をエスカレートした場合(人類の紛争では悲しいことに一般的なものですが)、調停プロセスを促進するは非常に重要です。 ちなみに、これは一例に過ぎません。委員会は、どのようなケースでも調停を検討することができますが、このプロセスはあくまでも自発的なものであり、当事者に参加を迫ることはできないことを念頭に置いて下さい。 委員会が調停を提案する場合は、次のようにすべきです。
調停者として役立つ候補者を見つけます。 報告者の合意を取得します。 報告者は、調停のアイデアを拒否したり、代替の調停者を提案する権利を持ちます。 報告者の同意を取得します。 調停人を決定します。当事者は、提案された候補者とは別の調停人を提案することができます。すべての条件で共通の合意に達した場合のみ、プロセスを進めることができます。 調停が完了するまでのタイムラインを設定し、理想的には2週間以内に完了させます。 調停者は、すべての当事者と関わり、すべての人に満足のいく決議を求めていきます。 終了後、調停人は（プロセスの全当事者によって吟味された）報告書を委員会に提出し、今後のステップに関する推奨事項を提示します。 委員会は、これらの結果(満足のいく決議が達成されたか否か) を評価し、必要と判断される追加的な措置を決定します。
報告に対する委員会の対応# 委員会(または委員) が行動規範違反報告を受けた時、その報告が明確で深刻な違反であるかどうかは判断されます(以下に違反項目を定義します)。 違反判定された場合は、通常のレポート処理プロセスに加えて、即時の対応が必要になります。
明確かつ深刻な違反行為の解決# 私たちは、インターネットでの会話が簡単にひどい誹謗中傷になってしまうことを、痛いほど知っています。 個人的な脅迫、暴力的、性差別的、人種差別的な言葉など、明らかで深刻な違反に対しては、迅速に対処します。
行動規範委員会のメンバーは、明確かつ深刻な違反に気づいた場合、以下のように行動します。
直ちにすべてのNumPyのオンラインコミュニティから違反者を排除します。 報告が受信され、違反者が排除されたことを報告者に連絡します。 どのような場合でも、モデレーターは違反者に連絡するための合理的な努力を行い、違反者の言葉や行動がどのように「明確かつ重大な違反」に該当するのかを具体的に伝えるべきです。 モデレーターは、違反者がこれは不当だと思う場合、あるいはNumPyチャンネルとの再接続を望む場合には、行動規範委員会による以下のような審査を求める権利があることも述べるべきです。 モデレータは、この説明を行動規範委員会に転送する必要があります。 行動規範委員会は、このプロセスが適用されたすべてのケースを正式にレビューし署名することで、よくある盛り上がりすぎた論争を諫めるためこのプロセスが使用されたのでないことを確認します。 報告の処理# 報告が委員会に送られると、直ちに報告者に返信して報告を受領したことを確認します。 この返信は72時間以内に送信される必要があり、委員会はそれよりもはるかに迅速に対応するよう努める必要があります。
レポートに十分な情報が含まれていない場合、委員会は行動する前に、関連するすべてのデータを取得するようにします。 委員会は、事件の状況を全て知るために関係する個人に連絡する際に、運営協議会に代わって行動する権限を与えられています。
その後、委員会は今回の問題を見直し、効果を最大限に発揮する対策を決定します。
問題の種類 今回の事情が行動規範違反であるかどうか。 責任者が誰であるか これが進行中の状況であるか、誰の物理的安全に脅威があるかどうか。 これらの情報は書面で収集され、可能な限りグループの審議が記録され、保持されます (例えば、チャットの記録、Eメールのディスカッション、会議通話の記録、音声会話の概要など)。</description></item><item><title>Terms of Use</title><link>https://numpy.org/ja/terms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/terms/</guid><description>Last updated January 4, 2020
AGREEMENT TO TERMS# These Terms of Use constitute a legally binding agreement made between you, whether personally or on behalf of an entity (“you”) and NumPy (&amp;quot;Project&amp;quot;, “we”, “us”, or “our”), concerning your access to and use of the numpy.org website as well as any other media form, media channel, mobile website or mobile application related, linked, or otherwise connected thereto (collectively, the “Site”). You agree that by accessing the Site, you have read, understood, and agreed to be bound by all of these Terms of Use.</description></item><item><title>ケーススタディ: DeepLabCut 三次元姿勢推定</title><link>https://numpy.org/ja/case-studies/deeplabcut-dnn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/case-studies/deeplabcut-dnn/</guid><description>DeepLapCutを用いたマウスの手の動きの解析#
(Source: www.deeplabcut.org ) オープンソースソフトウェアは生体臨床医学を加速させています。 DeepLabCut を使用すると、深層学習を使用して動物の行動を自動的にビデオ解析することができます。 —Alexander Mathis、 准教授、École polytechnology fe’rale de Lausanne (EPFL)
DeepLabCut について# DeepLabCutは、ごくわずかなトレーニングデータで人間レベルの精度で実験動物の行動を追跡可能にするオープンソースのツールボックスです。 DeepLabCutの技術を使うことで、科学者は動物の種類と時系列のデータをもとに、運動制御と行動に関する科学的な理解を深めることができるようになりました。
神経科学、医学、生体力学などのいくつかの研究分野では、動物の動きを追跡したデータを使用しています。 DeepLabCutは、動画に記録された動きを解析することで、人間やその他の動物が何をしているのかを理解することができます。 タグ付けや監視などの、手間のかかる作業を自動化し、深層学習ベースのデータ解析を実施します。 DeepLabCutは、霊長類、マウス、魚、ハエなどの動物を観察する科学研究をより速く正確にしています。
色のついた点は競走馬の体の位置を追跡#
(Source: Mackenzie Mathis) DeepLabCutは、動物の姿勢を抽出することで非侵襲的な行動追跡を行います。 これは、生体力学、遺伝学、倫理学、神経科学などの分野での研究に必要不可欠です。 動的に変化する背景の中で、動物の姿勢をビデオデータから非侵襲的に測定することは、技術的にも、必要な計算リソースやトレーニングデータの点でも、非常に困難な計算処理です。
DeepLabCutは、研究者が対象の姿勢を推定し、Pythonベースのソフトウェアを使って効率的に対象の行動を定量化することを可能にします。 DeepLabCutを使用すると、研究者は動画から異なるフレームを識別し、数十個のフレームの特定の身体部位を、よくできたGUIによってラベルづけできます。 すると、DeepLabCutの深層学習ベースのポーズ推定アーキテクチャにより、動画の残りの部分や動物の他の類似した動画から同じ特徴を抽出する方法を学習できます。 ハエやマウスなどの一般的な実験動物から チーターのようなより珍しい動物まで、動物の種類を問わず利用できます。
DeepLabCutでは転移学習という技術を使用しています。 これにより必要な学習データの量を大幅に削減し、学習の収束を加速させることができます。 必要に応じて、より高速な推論を提供するさまざまなネットワークアーキテクチャ(MobileNetV2など)を選択することができ、リアルタイムの実験データフィードバックと組み合わせることもできます。 DeepLabCutはもともとDeeperCutと呼ばれるパフォーマンスのよい人用のポーズ推定アーキテクチャの特徴検出器を使用しており、これが名前の由来になりました。 今ではこのパッケージは大幅に変更され、追加のアーキテクチャ・データの水増し・一通りのユーザー用フロントエンドを含んでいます。 さらに、 大規模な生物学的実験をサポートするため、DeepLabCutはオンライン学習の機能を提供しています。 これにより、動画の時間をこえて学習データを増やすことができ、エッジケースをカバーしたり、特定のコンテキスト内でポーズ推定アルゴリズムを堅牢にしたりできます。
最近、DeepLabCut model zooが発表されました。 これは、霊長類の顔分析から犬の姿勢まで、様々な種や実験条件に対応した事前訓練済みモデルを提供しています。 これにより、例えば、新しいデータのラベルを付けることなくクラウドで予測を実行することができたり、ニューラルネットワークの学習を実行することができます。 プログラミング経験は必要ありません。
主な目標と結果# 科学研究のための動物姿勢解析の自動化:
DeepLabCutという技術の主な目的は、多様な環境で動物の姿勢を測定し追跡することです。 このデータは例えば神経科学の研究において、脳がどのように運動を制御しているかを理解するためのや、動物がどのように社会的に交流しているかを明らかにするために利用することができます。 研究者はDeepLabCutで 10倍のパフォーマンス向上 が可能であると発表しています。 オフラインでは最大1200フレーム/秒(FPS) で姿勢を推定することができます。
姿勢推定のための使いやすいPythonツールキットの作成:
DeepLabCutは、動物の姿勢推定技術を研究者が簡単に利用できるツールとして共有したいという考えから開発されています。 そこで開発者らはプロジェクト管理機能を備えた、単独で機能し、使いやすいPythonツールボックスとしてこのツールを作成しました。 これにより、姿勢推定を自動化するだけでなく、DeepLabCutツールキットユーザーをデータセット収集段階から共有可能・再利用可能な分析パイプラインを作成する段階まで補助し、プロジェクトをエンドツーエンドで管理することも可能になりました。
このツールキット はオープンソースとして利用できます。
典型的なDeepLabCutワークフローは以下のようになります。
オンライン学習によるトレーニングセットの作成と調整 特定の動物やシナリオに合わせたニューラルネットワークの構築 動画における大規模推論のためのコード作成 統合された可視化ツールを使用した推論の描画 DeepLabCutによる姿勢推定のステップ#</description></item><item><title>ケーススタディ: クリケット分析、ゲームチェンジャー!</title><link>https://numpy.org/ja/case-studies/cricket-analytics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/case-studies/cricket-analytics/</guid><description>IPLT20、インド最大のクリケットフェスティバル#
(Image credits: IPLT20 (cup and logo) &amp;amp; Akash Yadav (stadium)) 観客のために競技をするのではなく、国のために競技するのです。 —M S Dhoni、 インディアンチームの元キャプテン、インターナショナル・クリケットプレイヤー、チェンナイ・スーパー・キングスのためにIPLでプレイ
クリケットについて# インド人はクリケットが大好きだと言っても過言ではないでしょう。 この競技は、他のスポーツと異なり、インドの農村部や都市部を問わず、あらゆる場所でプレイされており、若者から年配の方まで広く人気があり、インドでは何十億人もの人々を結びつける役割を担っています。 クリケットは多くのメディアの注目を集めています。 クリケットは多くのメディアの注目を集め、非常に多額のお金と名声がかかっています。 過去数年間、テクノロジーは文字通りクリケットの試合を変えてきました。 視聴者はストリーミングメディア、トーナメント、モバイルベースの手頃なアクセスによるライブクリケット視聴などを享受しています。
インドプレミアリーグ (IPL) は、2008年に設立された20チームから成るプロクリケットリーグです。 これは世界で最も参加者が多いクリケットイベントの1つで、2019年の市場規模は67億ドルだと評価されています。
クリケットは数のゲームです。 バッツマンによってスコアされたランの数、ボウラーによって取られたウィケットの数、クリケットチームによって獲得した試合の数、バッツマンがボウリング攻撃に特定の方法で応答する回数。 クリケットの数字を掘り下げてパフォーマンスを向上させるとともに、NumPyなどの数値計算ソフトウェアを利用した強力な分析ツールを介して、クリケットのビジネスチャンス、市場全体、経済性を研究することは、大きな意味を持ちます。 クリケット分析は、試合に関する興味深い洞察と、ゲームの結果に関する予測AIを提供します。
現在では、クリケットゲームの記録と 利用可能な統計データは豊富で、ほぼ無限の宝の山だと言えます。 : ESPN cricinfo や cricsheet. これらのクリケットデータベースは、最新の機械学習と予測モデリングアルゴリズムを使用して、 クリケット 分析 に使用されています。 メディアやプロスポーツ団体のエンターテインメントプラットフォームは、技術や分析を利用し、試合勝率を向上させるために、下記のような要素が主要なメトリックだと考え始めています。
バッティング成績の移動平均 スコア予測 プレイヤーの体力や、異なる相手に対するパフォーマンスについての洞察 チーム構成に戦略的な決定を下すための、各勝敗へのプレイヤーの貢献 フィールドのフォーカルポイントとなるクリケットピッチ#
(Image credit: Debarghya Das) データ分析の主要な目標# スポーツデータ分析はクリケットだけでなく、チーム全体のパフォーマンスを向上させ、勝利率を最大限に高めるために、 他のスポーツでも使用されています。 リアルタイムデータ分析は、ゲーム中の洞察を得ることができ、チームや関連ビジネスが経済的利益と成長のために戦術を変更するためも役立ちます。 履歴分析に加えて、予測モデルは可能性のある結果を求めることができますが、かなりの数のナンバークランチングとデータサイエンスのノウハウ、可視化ツール、および分析に新しい観測データを含める機能などが必要になります。 クリケットの姿勢推定#
(Image credit: connect.vin) 課題# データのクリーニングと前処理
IPLは、クリケットを古典的なテストマッチ形式から、はるかに大規模に拡大させました。 毎シーズン、様々なフォーマットで行われる試合の数は増加しており、データ、アルゴリズム、最新のスポーツデータ分析技術、シミュレーションモデルも増加しています。 クリケットのデータ分析には、フィールドマッピング、プレイヤートラッキング、ボールトラッキング、プレイヤーショット分析、およびボールがどのように動くのか、その角度、スピン、速度、軌道など、他の沢山の種類のデータを必要とします。 これらの要因により、データクリーニングと前処理の複雑さが増してしまいました。
動的モデリング
クリケットでは、他のスポーツと同様、フィールド上の選手の様々な数字を追跡するために、関連する変数の数が多くなってしまいがちです。 たとえば、ボールやその属性情報、およびいくつかの行動をとるアクションのいくつかの可能性などの変数です。 データ分析とモデリングの複雑さは、分析中に必要となる予測のための質問の種類に正比例しており、データ表現とモデルにも大きく依存しています。 バッツマンが異なる角度や速度でボールを打った場合に何が起こるのかのような、動的なクリケットのプレーの予測が必要な場合、計算量やデータ比較が更に困難になります。</description></item><item><title>ケーススタディ: 重力波の発見</title><link>https://numpy.org/ja/case-studies/gw-discov/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/case-studies/gw-discov/</guid><description>重力波#
(Image Credits: The Simulating eXtreme Spacetimes (SXS) Project at LIGO) 科学計算のためのPythonエコシステムはLIGOで行われている研究のための重要なインフラです。 —David Shoemaker, LIGOサイエンティフィック・コラボレーション
重力波 と LIGO について# 重力波は、空間と時間の基本構造の波紋です。 2つのブラックホールの衝突や合体、2連星や超新星の合体など、大きな変動現象によって生成されます。 重力波の観測は、重力を研究する上で重要なだけでなく、遠い宇宙におけるいくつかの不明瞭な現象と、その影響を理解するためにも役立ちます。
[レーザー干渉計重力波天文台(LIGO)](https://www. ligo. caltech. edu)は、アインシュタインの一般相対性理論によって予測された重力波の直接検出を通して、重力波天体物理学の分野を切り開くために設計されました。 このシステムは、アメリカのワシントン州ハンフォードとルイジアナ州リビングストンにある2つの干渉計が一体となって構成され、重力波を検出します。 それぞれのシステムには、レーザー干渉法を用いた数キロ規模の重力波検出器が設置されています。 LIGO Scientific Collaboration（LSC）は、米国をはじめとする14カ国の大学から1000人以上の科学者が集まり、90以上の大学・研究機関によって支援されています。 また、約250人の学生も参加しています。 今回のLIGOの発見は、重力波が地球を通過する際に生じる空間と時間の微小な乱れの測定により、重力波そのものを初めて観測しました。 これにより、新しい天体物理学のフロンティアが開かれました。 これは、宇宙の歪んだ側面、つまり歪んだ時空から作られた物体とそれに現象を切り拓くものです。
主な目的# LIGOのミッションは、宇宙で最も激しくエネルギーに満ちたプロセスからの重力波を検出することですが、LIGOが収集するデータは、重力、相対性理論、天体物理学、宇宙論、素粒子物理学、原子核物理学など、物理学の多くの分野に広く影響を与える可能性があります。 複雑な数学を含む相対性理論の数値計算によって観測データを解析し、信号とノイズを識別し、関連性のある信号をフィルタリングし、観測データの有意性を統計的に推定することで、宇宙の始まりのクランチを観測できるようになります。 バイナリや数値の結果を理解しやすいようにデータを可視化することも必要です。 課題# 計算
合成により放出される重力波は、スーパーコンピュータを用いて数値相対性を手あたり次第に試すような方法では計算できません。 LIGOが収集するデータ量は、重力波の信号が少ないのと同じくらい不可解です。
データの氾濫
観測装置がより高感度で信頼性を持つようになると、データの大洪水によって、干し草の中から針を探すような問題が、多重に発生することがわかります。 LIGOは毎日テラバイトのデータを生成しているのです！ この大量のデータを解釈するには、各検出ごとに多大な労力が必要です。 例えば、LIGOによって収集される信号は、数十万個の重力波シグネチャのテンプレートで構成されており、スーパーコンピュータでしか解析できません。
可視化
アインシュタイン方程式を元にスーパーコンピュータでデータを解析できるようになったら、次はデータを人間の脳で理解できるようにしなければなりません。 シミュレーションのモデリングや信号の検出には、わかりやすい可視化技術が必要です。 画像処理やシミュレーションによって、解析結果をより多くの人に理解してもらえる状態になる前の段階において、可視化は、数値相対性を十分に重要視していなかった純粋な科学愛好家の目に、数値相対性が、より信頼性の高いものとして映るようにするという役割も果たしています。 複雑な計算と描画を行い、また最新の実験結果と洞察に基づいてシミュレーションと再描画を行う作業は時間のかかるもので、この分野の研究者にとっての課題です。
GW150914から推定される重力波の歪みの振幅#
(Graph Credits: Observation of Gravitational Waves from a Binary Black Hole Merger, ResearchGate Publication) 重力波の検出におけるNumPyの役割# 合成により放出される重力波は、スーパーコンピュータを用いたブルートフォースの数値相対性処理以外の手法では計算できません。 重力波は非常に小さい効果を生み、物質と微小な相互作用を持つため、検出が困難です。 LIGOのすべてのデータを処理・分析するには、膨大な計算インフラが必要です。 信号の数十億倍のノイズを除去した後も、非常に複雑な相対性理論の方程式と膨大な量のデータがあり、計算上の課題となっています。</description></item><item><title>ケーススタディ：世界初のブラックホール画像</title><link>https://numpy.org/ja/case-studies/blackhole-image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/case-studies/blackhole-image/</guid><description>Black Hole M87#
(Image Credits: Event Horizon Telescope Collaboration) M87ブラックホールを画像化することは、見ることのできないものを、あえて見ようとするようなものです。 —カリフォルニア工科大学 計算・数理学部のKatie Bouman助教授
地球大の望遠鏡# Event Horizon telescope(EHT)は、地球サイズの解析望遠鏡を形成する8台の地上型電波望遠鏡から成るシステムで、これまでに前例のない感度と解像度で宇宙を研究することができます。 超長基線干渉法(VLBI) と呼ばれる手法を用いた巨大な仮想望遠鏡の角度分解能は、20マイクロ秒で、ニューヨークにある新聞をパリの歩道のカフェから読むのに十分な解像度です!
主な目標と結果# 宇宙の新しい見方: EHTの画期的な考え方の基礎が築かれたのは、100年前に Sir Arthur Eddingtonがアインシュタインの一般相対性理論に沿った最初の観測を実施したことが始まりでした。
ブラックホール: EHTは、おとめ座銀河団のメシエ87銀河 (M87) の中心にある、地球から約5500万光年の距離にある超巨大ブラックホールを観測しました。 その質量は、太陽の65億倍です。 100年以上に渡る研究が行われてもなお、これまでに視覚的にブラックホールを観測できたことはありませんでした。
観測と理論の比較: 科学者たちの間で、アインシュタインの一般相対性理論から、重力による光の曲げや光の捕獲による影のような領域が観測できるのではないかと期待されていました。 これはブラックホールの巨大な質量を測定するために利用することができます。
課題# 大規模な計算
EHTは膨大なデータ処理の課題を抱えていました。 大気の位相変動は急速で、記録帯域の幅は大きく、望遠鏡はそれぞれ異なっていて地理的にも分散しています。
大量のデータ
EHTは一日で350テラバイトを超える観測データを生成し、ヘリウムで満たされたハードドライブに保存しています。 この大量のデータとデータの複雑さを軽減することは非常に難しいことです。
よくわからないものを観測する
今までに見たことのないものを見るのが研究の目標なら、どうやって科学者はその画像が正しいと確信することができるのでしょうか?
EHTのデータ処理パイプライン#
(Diagram Credits: The Astrophysical Journal, Event Horizon Telescope Collaboration) NumPyが果たした役割# データに問題がある場合はどうなるでしょう？ あるいは、アルゴリズムが特定の仮定に あまりにも大きく依存しているかもしれません。 もしあるパラメータを変更した場合、画像は大きく変化するのでしょうか？
EHTの共同研究では、最先端の画像再構成技術を使用して、それぞれのチームがデータを評価することによって、これらの課題に対処しました。 それぞれのチームの解析結果が同じであることが証明されると、それらの結果を組み合わせることで、ブラックホール画像を得ることができました。
彼らの研究は、共同のデータ解析を通じて科学を進歩させる、科学的なPythonエコシステムが果たす役割を如実に表しています。
ブラックホール画像化でNumPyが果たした役割#
例えば、 eht-imaging というPython パッケージは VLBI データで画像の再構築をシミュレートし、実行するためのツールです。 NumPyは、以下のソフトウェア依存関係チャートで示されているように、このパッケージで使用される配列データ処理の中核を担っています。</description></item><item><title>コミュニティ</title><link>https://numpy.org/ja/community/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/community/</guid><description>NumPy は 常に多様なコントリビュータ のグループによって開発されている、コミュニティ主導のオープンソースプロジェクトです。 NumPy を主導するグループは、オープンで協力的でポジティブなコミュニティを作ることを、約束しました。 コミュニティを繁栄させるために、コミュニティの人達と交流する方法については、 NumPy 行動規範 をご覧ください。
私たちは、NumPyコミュニティ内で学んだり、知識を共有したり、他の人と交流するためのいくつかのコミュニケーション方法を提供しています。
オンラインで参加する方法# NumPy プロジェクトやコミュニティと直接交流する方法は次の通りです。 重要: 私たちはユーザとコミュニティメンバーに互いにNumPyの使い方の質問に関して助言し合って欲しいと思っています。 - 参照サポート.
NumPyメーリングリスト：# このメーリングリストは、NumPy に新しい機能を追加するなど、より長い期間の議論のための主なコミュニケーションの場です。 NumPyのRoadmapに変更を加えたり、プロジェクト全体での意思決定を行います。 このメーリングリストでは、リリース、開発者会議、スプリント、カンファレンストークなど、NumPy についてのアナウンスなどにも利用されます。
このメーリングリストでは、一番下のメールを使用し、メーリングリストに返信して下さい( 他の送信者ではなく)。 このメーリングリストの検索可能なアーカイブは こちら にあります。
GitHub イシュートラッカー# バグレポート（例：”np.arange(3).shape returns (5,), when it should return (3,)&amp;quot;); ドキュメントの問題 (例: &amp;ldquo;I find this section unclear&amp;rdquo;); 機能追加リクエスト (例: &amp;ldquo;I would like to have a new interpolation method in np.percentile&amp;rdquo;). ちなみに、セキュリティの脆弱性を報告するには、GitHubのイシュートラッカーは適切な場所ではないことに注意してください。 NumPy でセキュリティ上の脆弱性を発見したと思われる場合は、 こちら から報告してください。
Slack# SlackはNumpyに_ 貢献するための質問をするための_、リアルタイムのチャットルームです。 具体的には、 公開のメーリングリストやGitHubで質問やアイデアを持ち出すことを躊躇している人々のためのものです。 Slackに招待してもらいたい場合はこちらを確認下さい。</description></item><item><title>サポートを得る方法</title><link>https://numpy.org/ja/gethelp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/gethelp/</guid><description>ユーザーからの質問: ユーザーからの質問に対して回答を得る最も良い方法は、StackOverflowに質問を投稿することです。 規模は小さいですが、下記のような質問をする場所もあります: IRC、 Gitter、 Reddit。 私たちはこれらのサイトを定期的に確認して、直接質問に答えるようにしていますが、質問の数は膨大です。
開発関連の問題: NumPyの開発関連の問題 (例: バグレポート) については、コミュニティ のページを参照してください。
StackOverflow# NumPyの使用方法に関する質問をするためのフォーラムです。 例えば、「NumPyでXをするにはどうすればいいですか？ 質問をする時は、 #numpy タグ を使用してください。
Reddit# もう一つの使い方に関する質問の場です。
Gitter# ユーザーとコミュニティメンバーがお互いに助け合うリアルタイムのチャットルームです。
IRC# ユーザーとコミュニティメンバーがお互いを助け合うもう一つのリアルタイムチャットルームです。</description></item><item><title>プライバシーポリシー</title><link>https://numpy.org/ja/privacy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/privacy/</guid><description>numpy.org は、NumPyプロジェクトの資金援助のスポンサーでもある、NumFOCUS, Inc.によって運営されています。 このウェブサイトのプライバシーポリシーについては、https://numfocus.org/privacy-policy を参照してください。
ポリシーまたはNumFOCUSのデータ収集、使用、および開示方法についてご質問がある場合は、privacy@numfocus.orgのNumFOCUSスタッフにお問い合わせください。</description></item><item><title>プレス用資料</title><link>https://numpy.org/ja/press-kit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/press-kit/</guid><description>私たちはユーザーの皆さんが次に書く学術論文や、コース教材、プレゼンテーションなどに、NumPyプロジェクトのロゴを簡単に盛り込めるようにしたいと考えています。
こちらから、様々な解像度のNumPyロゴのファイルをダウンロードできます: ロゴリンク。 numpy.orgのリソースを使用することで、NumPy行動規範 を受け入れたことになることに注意してください。</description></item><item><title>私たちについて</title><link>https://numpy.org/ja/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/about/</guid><description>NumPy は、Python で数値計算を可能にするためのオープンソースプロジェクトです。 NumPyは、NumericやNumarrayといった初期のライブラリのコードをもとに、2005年から開発が開始されました。 NumPyは完全にオープンソースなソフトウェアです。 そして、NumPyは修正BSD ライセンス の条項の下で、すべての人が利用可能です。
NumPy は 、NumPyコミュニティやより広範な科学計算用Python コミュニティとの合意のもと、GitHub 上でオープンに開発されています。 NumPyのガバナンス方法の詳細については、 Governance Document をご覧ください。
運営委員会# Numpy運営委員会はこのプロジェクトの管理組織です。 その役割は、Numpy コミュニティと協力し、Numpyのソフトウェアサービスを確実にユーザに提供することです。 ソフトウェアパッケージとコミュニティの両方において、プロジェクトの長期的な持続可能性を保っていきます。 NumPy運営委員会は現在以下のメンバーで構成されています (姓のアルファベット順):
Sebastian Berg Ralf Gommers Charles Harris Stephan Hoyer Inessa Pawson Matti Picus Stéfan van der Walt Melissa Weber Mendonça Eric Wieser 過去のメンバー
Alex Griffing (2015-2017) Allan Haldane (2015-2021) Marten van Kerkwijk (2017-2019) Travis Oliphant (プロジェクト創設者, 2005-2012) Nathaniel Smith (2012-2021) Julian Taylor (2013-2021) Jaime Fernández del Río (2014-2021) Pauli Virtanen (2008-2021) Numpy運営委員会に連絡するには、numpy-team@googlegroups.</description></item><item><title>配列演算</title><link>https://numpy.org/ja/arraycomputing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://numpy.org/ja/arraycomputing/</guid><description>配列演算は統計、数学、科学計算の基礎です。可視化、信号処理、画像処理、生命情報学、機械学習、人工知能など、現代のデータサイエンスやデータ分析の様々な分野で配列演算は中核を担っています。
大規模なデータ処理やデータ変換には、効率的な配列演算が重要です。 データ分析や、機械学習、効率的な数値計算に最適な言語のひとつは Python です。
Numerical Python: NumPyは、Pythonにおけるデファクトスタンダードなライブラリであり、大規模な多次元配列や行列、そして、それらの配列を処理する様々な分野の数学ルーチンをサポートしています。
2006年にNumPyが発表されてから、2008年にPandasが登場し、その後、数年間にいくつかの配列演算関連のライブラリが次々と現れるようになりました。 これらの新しい配列演算ライブラリの多くは、NumPyの機能や能力を模倣しており、機械学習や人工知能向けの新しいアルゴリズムや機能を持っています。
配列演算 は 配列 のデータ構造に基づいています。 配列 は、関連する膨大なデータ群を簡単にかつ高速に、ソート、検索、変換、数学処理できるように構成されています。
配列演算は 一度に 配列のデータの複数の要素を操作するため、 * ユニーク* な処理と言えます。 これは、配列操作が一回の処理で、配列内の 全ての値に適用されることを意味しています。 このベクトル化手法は、速さと単純さという恩恵をもたらします。 プログラマーはループを回して個々の要素のスカラー演算を行うことなく、データの集合を操作しコーディングすることができるのです。</description></item></channel></rss>